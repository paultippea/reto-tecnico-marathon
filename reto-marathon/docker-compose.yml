version: '3.8'

services:
  mongo-marathon:
    image: mongo
    restart: unless-stopped
    container_name: mongo-marathon
    environment:
      MONGO_INITDB_DATABASE: marathondb
      MONGO_INITDB_ROOT_USERNAME: 'root'
      MONGO_INITDB_ROOT_PASSWORD: 'password'
    volumes:
      - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "27017:27017"
    networks:
      - network-marathon

  # mongo-express-marathon:
  #   image: mongo-express
  #   restart: unless-stopped
  #   container_name: mongo-express-marathon
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: 'root'
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: 'password'
  #     ME_CONFIG_MONGODB_SERVER: 'mongo-marathon'
  #     ME_CONFIG_MONGODB_PORT: '27017'
  #     ME_CONFIG_BASICAUTH_USERNAME: 'sa'
  #     ME_CONFIG_BASICAUTH_PASSWORD: 'sa'
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - mongo-marathon
  #   networks:
  #     - network-marathon

  ms-marathon-app:
    build:
      context: ./marathon-technical-challenge
      dockerfile: ./docker/Dockerfile
    container_name: ms-marathon-app
    ports:
      - "3000:3000"
    environment:
      APPLICATION_PORT: 3000
      DATABASE_URI: mongodb://mongo-marathon:27017
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      DATABASE_DATABASE: marathondb
      API_PERSON_URI: https://wsruc.com/
      API_PERSON_TOKEN: cXdlcnR5bGFtYXJja19zYUBob3RtYWlsLmNvbXF3ZXJ0eQ==
      JWT_SECRET: 6fJ7oOwBVUIbzqceGAFXtHt0e1vPckEK
      JWT_EXPIRED: 3600s
    depends_on:
      - mongo-marathon
      - marathon-app
    networks:
      - network-marathon

  marathon-app:
    build:
      context: ./front-marathon
      dockerfile: ./docker/Dockerfile
    container_name: marathon-app
    ports:
      - "4200:80"
    restart: always
    networks:
      - network-marathon

networks:
  network-marathon:
    driver: bridge
